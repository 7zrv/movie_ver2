# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
        rds_end_point : ${{secrets.RDS_END_POINT}}
        rds_secret_key : ${{secrets.RDS_SECRET_KEY}}
        rds_user_name : ${{secrets.RDS_USER_NAME}}
        storage_access_key : ${{secrets.STORAGE_ACCESS_KEY}}
        storage_name : ${{secrets.STORAGE_NAME}}
        storage_secret_key : ${{secrets.STORAGE_SECRET_KEY}}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Init env variables
      run: |
        echo "rds_end_point=$rds_end_point" >> .env
        echo "rds_secret_key=$rds_secret_key" >> .env
        echo "rds_user_name=$rds_user_name" >> .env
        echo "storage_access_key=$storage_access_key" >> .env
        echo "storage_name=$storage_name" >> .env
        echo "storage_secret_key=$storage_secret_key" >> .env
      
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Docker build
      run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t movie_main . 
          docker tag movie_main 7zrv/movie_main:${GITHUB_SHA::7}
          docker push 7zrv/movie_main:${GITHUB_SHA::7}
          
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_END_POINT }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull 7zrv/movie_main:${GITHUB_SHA::7}
          docker tag 7zrv/movie_main:${GITHUB_SHA::7} movie_main
          docker stop server
          docker rm -f server
          docker run -d --name server -p 8080:8080 --env-file .env movie_main

