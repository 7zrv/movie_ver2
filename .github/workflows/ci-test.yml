# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - uses: ankane/setup-mariadb@v1

      - name: Generate Environment Variables File for Production
        run: |
          echo "RDS_END_POINT=$RDS_END_POINT" >> .env.production
          echo "RDS_SECRET_KEY=$RDS_SECRET_KEY" >> .env.production
          echo "RDS_USER_NAME=$RDS_USER_NAME" >> .env.production
          echo "STORAGE_ACCESS_KEY=$STORAGE_ACCESS_KEY" >> .env.production
          echo "STORAGE_NAME=$STORAGE_NAME" >> .env.production
          echo "STORAGE_SECRET_KEY=$STORAGE_SECRET_KEY" >> .env.production
          
        env:
          RDS_END_POINT:  $RDS_END_POINT
          RDS_SECRET_KEY:  $RDS_SECRET_KEY
          RDS_USER_NAME:  $RDS_USER_NAME
          STORAGE_ACCESS_KEY:  $STORAGE_ACCESS_KEY
          STORAGE_NAME:  $STORAGE_NAME
          STORAGE_SECRET_KEY:  $secrets.STORAGE_SECRET_KEY
          

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
